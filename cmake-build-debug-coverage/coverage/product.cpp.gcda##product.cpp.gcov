        -:    0:Source:/mnt/c/Users/vanaa/OneDrive - University of Pretoria/1st Year/Semester 2/COS 110/__Pracs/Practical 6/Practical 6/product.cpp
        -:    0:Graph:/mnt/c/Users/vanaa/OneDrive - University of Pretoria/1st Year/Semester 2/COS 110/__Pracs/Practical 6/Practical 6/cmake-build-debug-coverage/CMakeFiles/Practical_6.dir/product.cpp.gcno
        -:    0:Data:/mnt/c/Users/vanaa/OneDrive - University of Pretoria/1st Year/Semester 2/COS 110/__Pracs/Practical 6/Practical 6/cmake-build-debug-coverage/CMakeFiles/Practical_6.dir/product.cpp.gcda
        -:    0:Runs:1
        -:    1:#include <sstream>
        -:    2:#include <iostream>
        -:    3:#include <iomanip>
        -:    4:#include "product.h"
        -:    5:/**
        -:    6: * @brief Creates a product
        -:    7: * @param n The name of the product
        -:    8: * @param bNn The barcode number of the product
        -:    9: * @param v The value of the product
        -:   10: * @param a The amount of the product
        -:   11: */
function _ZN7productC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiii called 1 returned 100% blocks executed 71%
        1:   12:product::product(std::string n, int bNn, int v, int a) : item(n, bNn) {
        1:   12-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   12-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
    $$$$$:   12-block  2
call    7 never executed
        1:   13:    value = v;
        1:   14:    amount = a;
        1:   15:}
        1:   15-block  0
        -:   16:
function _ZN7productD2Ev called 0 returned 0% blocks executed 0%
    #####:   17:product::~product() {
        -:   18:
    #####:   19:}
    %%%%%:   19-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   19-block  1
        -:   20:/**
        -:   21: * @brief Buys a product
        -:   22: * @param s The amount to buy, will be a positive integer
        -:   23: */
function _ZN7product3buyENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 76%
        1:   24:void product::buy(std::string s) {
        1:   25:    std::stringstream ss;
        1:   25-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   26:    ss << s;
        1:   26-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   27:    int n;
        1:   28:    ss >> n;
        1:   28-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   29:
        1:   30:    if (n > amount) {
        1:   30-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:   31:        n = amount;
    %%%%%:   31-block  0
        -:   32:    }
        1:   33:    if (n < 0) {
        1:   33-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:   34:        n = 0;
    %%%%%:   34-block  0
        -:   35:    }
        -:   36:
        1:   37:    amount -= n;
        -:   38:
        1:   39:    std::cout << "Bought{" << std::setprecision(2) << std::fixed
        1:   39-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   39-block  1
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   39-block  2
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:   40:            << n << "}{" << name << "}{R" << price(s) << "}" << std::endl;
        1:   40-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   40-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   40-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   40-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   40-block  4
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:   40-block  5
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:   40-block  6
call   18 returned 1
branch 19 taken 1 (fallthrough)
branch 20 taken 0 (throw)
        1:   40-block  7
call   21 returned 1
branch 22 taken 1 (fallthrough)
branch 23 taken 0 (throw)
        1:   40-block  8
call   24 returned 1
branch 25 taken 1 (fallthrough)
branch 26 taken 0 (throw)
        1:   40-block  9
call   27 returned 1
branch 28 taken 1 (fallthrough)
branch 29 taken 0 (throw)
    $$$$$:   40-block 10
call   30 never executed
    $$$$$:   40-block 11
        1:   41:}
        1:   41-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   41-block  1
    $$$$$:   41-block  2
call    3 never executed
        -:   42:/**
        -:   43: * @brief Calculates the price of a product
        -:   44: * @param s The amount to buy, will be a positive integer
        -:   45: * @return The price of the product
        -:   46: */
function _ZN7product5priceENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 2 returned 100% blocks executed 73%
        2:   47:float product::price(std::string s) {
        2:   48:    std::stringstream ss;
        2:   48-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   49:    ss << s;
        2:   49-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        -:   50:    int n;
        2:   51:    ss >> n;
        2:   51-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        -:   52:
        2:   53:    if (n < 0) {
        2:   53-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 2
    #####:   54:        n = 0;
    %%%%%:   54-block  0
        -:   55:    }
        -:   56:
        2:   57:    return n * value;
        2:   57-block  0
        2:   58:}
        2:   58-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   58-block  1
call    3 never executed
        -:   59:/**
        -:   60: * @brief Prints the product
        -:   61: */
function _ZN7product5printEv called 1 returned 100% blocks executed 88%
        1:   62:void product::print() {
        1:   63:    std::cout << "product{" << getBarcode() << "}{"
        1:   63-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   63-block  1
call    3 never executed
        1:   64:            << name << "}{R" << value << "}{"
        1:   64-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        1:   64-block  1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   64-block  2
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
        1:   64-block  3
call   11 returned 1
branch 12 taken 1 (fallthrough)
branch 13 taken 0 (throw)
        1:   64-block  4
call   14 returned 1
branch 15 taken 1 (fallthrough)
branch 16 taken 0 (throw)
        1:   64-block  5
call   17 returned 1
branch 18 taken 1 (fallthrough)
branch 19 taken 0 (throw)
        1:   65:            << amount << "}" << std::endl;
        1:   65-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   65-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   65-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   66:}
        1:   66-block  0
