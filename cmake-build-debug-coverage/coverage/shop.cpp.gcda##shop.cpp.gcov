        -:    0:Source:/mnt/c/Users/vanaa/OneDrive - University of Pretoria/1st Year/Semester 2/COS 110/__Pracs/Practical 6/Practical 6/shop.cpp
        -:    0:Graph:/mnt/c/Users/vanaa/OneDrive - University of Pretoria/1st Year/Semester 2/COS 110/__Pracs/Practical 6/Practical 6/cmake-build-debug-coverage/CMakeFiles/Practical_6.dir/shop.cpp.gcno
        -:    0:Data:/mnt/c/Users/vanaa/OneDrive - University of Pretoria/1st Year/Semester 2/COS 110/__Pracs/Practical 6/Practical 6/cmake-build-debug-coverage/CMakeFiles/Practical_6.dir/shop.cpp.gcda
        -:    0:Runs:1
        -:    1:#include <iostream>
        -:    2:#include <sstream>
        -:    3:#include <iomanip>
        -:    4:#include "shop.h"
        -:    5:
function _ZN4shopC2Ev called 1 returned 100% blocks executed 100%
        1:    6:shop::shop() {
        1:    7:    numItems = 0;
        1:    8:    items = new item*[0];
        1:    8-block  0
call    0 returned 1
        1:    9:}
        -:   10:
function _ZN4shopD2Ev called 1 returned 100% blocks executed 85%
        1:   11:shop::~shop() {
        1:   12:    if (items != NULL) {
        1:   12-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 0
       12:   13:        for (int i = 0; i < numItems; i++) {
        1:   13-block  0
       11:   13-block  1
       12:   13-block  2
branch  0 taken 11
branch  1 taken 1 (fallthrough)
       11:   14:            delete items[i];
       11:   14-block  0
branch  0 taken 11 (fallthrough)
branch  1 taken 0
       11:   14-block  1
call    2 returned 11
branch  3 taken 11 (fallthrough)
branch  4 taken 0 (throw)
       11:   14-block  2
call    5 returned 11
    $$$$$:   14-block  3
call    6 never executed
        -:   15:        }
        1:   16:        delete[] items;
        1:   16-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        1:   16-block  1
call    2 returned 1
        -:   17:    }
        1:   18:}
        1:   18-block  0
        -:   19:
function _ZN4shop9itemIndexENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 28 returned 100% blocks executed 85%
       28:   20:int shop::itemIndex(std::string n) {
      168:   21:    for (int i = 0; i < numItems; i++) {
       28:   21-block  0
      140:   21-block  1
      168:   21-block  2
branch  0 taken 154
branch  1 taken 14 (fallthrough)
      154:   22:        if (items[i]->getName() == n)
      154:   22-block  0
call    0 returned 154
call    1 returned 154
branch  2 taken 154 (fallthrough)
branch  3 taken 0 (throw)
      154:   22-block  1
call    4 returned 154
branch  5 taken 154 (fallthrough)
branch  6 taken 0 (throw)
      154:   22-block  2
branch  7 taken 14 (fallthrough)
branch  8 taken 140
    $$$$$:   22-block  3
call    9 never executed
       14:   23:            return i;
       14:   23-block  0
        -:   24:    }
       14:   25:    return -1;
       14:   25-block  0
        -:   26:}
        -:   27:
function _ZN4shop7addItemEP4item called 22 returned 100% blocks executed 76%
       22:   28:void shop::addItem(item* i) {
       22:   29:    if (i == NULL) {
       22:   29-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 22
    #####:   30:        std::cout << "Item is NULL" << std::endl;
    %%%%%:   30-block  0
call    0 never executed
call    1 never executed
    #####:   31:        return;
        -:   32:    }
       22:   33:    if (itemIndex(i->getName()) != -1) {
       22:   33-block  0
call    0 returned 22
call    1 returned 22
branch  2 taken 22 (fallthrough)
branch  3 taken 0 (throw)
       22:   33-block  1
call    4 returned 22
branch  5 taken 22 (fallthrough)
branch  6 taken 0 (throw)
       22:   33-block  2
branch  7 taken 10 (fallthrough)
branch  8 taken 12
    $$$$$:   33-block  3
call    9 never executed
       10:   34:        std::cout << "Item already in shop" << std::endl;
       10:   34-block  0
call    0 returned 10
call    1 returned 10
       10:   35:        return;
        -:   36:    }
        -:   37:
      12*:   38:    item** temp = new item*[numItems + 1];
       12:   38-block  0
branch  0 taken 12 (fallthrough)
branch  1 taken 0
       12:   38-block  1
    %%%%%:   38-block  2
       12:   38-block  3
call    2 returned 12
       77:   39:    for (int j = 0; j < numItems; j++) {
       77:   39-block  0
branch  0 taken 65
branch  1 taken 12 (fallthrough)
       65:   40:        temp[j] = items[j];
       65:   40-block  0
        -:   41:    }
        -:   42:
       12:   43:    temp[numItems] = i;
        -:   44:
       12:   45:    delete[] items;
       12:   45-block  0
branch  0 taken 12 (fallthrough)
branch  1 taken 0
       12:   45-block  1
call    2 returned 12
        -:   46:
       12:   47:    items = temp;
       12:   48:    numItems++;
       12:   48-block  0
        -:   49:}
        -:   50:
function _ZN4shop8addItemsEPP4itemi called 2 returned 100% blocks executed 100%
        2:   51:void shop::addItems(item** i, int n) {
       22:   52:    for (int j = 0; j < n; j++) {
        2:   52-block  0
       22:   52-block  1
branch  0 taken 20
branch  1 taken 2 (fallthrough)
       20:   53:        addItem(i[j]);
       20:   53-block  0
call    0 returned 20
        -:   54:    }
        2:   55:}
        -:   56:
function _ZN4shop8buyItemsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 70%
        1:   57:void shop::buyItems(std::string s) {
        1:   58:    std::stringstream ss;
        1:   58-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   59:    ss << s;
        1:   59-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   60:
        1:   61:    std::string name;
        1:   61-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   62:    std::string inp;
        1:   62-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   63:
        1:   64:    float price = 0;
        -:   65:
        5:   66:    while (std::getline(ss, name, ':')) {
        1:   66-block  0
        5:   66-block  1
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0 (throw)
        5:   66-block  2
call    3 returned 5
branch  4 taken 5 (fallthrough)
branch  5 taken 0 (throw)
        5:   66-block  3
branch  6 taken 4
branch  7 taken 1 (fallthrough)
        4:   67:        int index = itemIndex(name);
        4:   67-block  0
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        4:   67-block  1
call    3 returned 4
branch  4 taken 4 (fallthrough)
branch  5 taken 0 (throw)
        4:   67-block  2
call    6 returned 4
branch  7 taken 4 (fallthrough)
branch  8 taken 0 (throw)
    $$$$$:   67-block  3
call    9 never executed
    $$$$$:   67-block  4
        4:   68:        if (index == -1) {
        4:   68-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 3
        1:   69:            std::cout << "Couldn't find " << name << std::endl;
        1:   69-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   69-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   69-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   70:            std::getline(ss, inp, '|');
        1:   70-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   71:        } else {
        3:   72:            std::getline(ss, inp, '|');
        3:   72-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   73:            price += items[index]->price(inp);
        3:   73-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   73-block  1
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
        3:   73-block  2
call    6 returned 3
branch  7 taken 3 (fallthrough)
branch  8 taken 0 (throw)
    $$$$$:   73-block  3
call    9 never executed
    $$$$$:   73-block  4
        3:   74:            items[index]->buy(inp);
        3:   74-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   74-block  1
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
        3:   74-block  2
call    6 returned 3
branch  7 taken 3 (fallthrough)
branch  8 taken 0 (throw)
        3:   74-block  3
    $$$$$:   74-block  4
call    9 never executed
    $$$$$:   74-block  5
        -:   75:        }
        -:   76:    }
        -:   77:
        1:   78:    std::cout << "Total: R" << std::setprecision(2) << std::fixed << price << std::endl;
        1:   78-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   78-block  1
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   78-block  2
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:   78-block  3
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:   78-block  4
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   79:}
        1:   79-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   79-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   79-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   79-block  3
    $$$$$:   79-block  4
call    9 never executed
    $$$$$:   79-block  5
call   10 never executed
    $$$$$:   79-block  6
call   11 never executed
        -:   80:
function _ZN4shop10printItemsEv called 1 returned 100% blocks executed 100%
        1:   81:void shop::printItems() {
       12:   82:    for (int i = 0; i < numItems; i++) {
        1:   82-block  0
       12:   82-block  1
branch  0 taken 11
branch  1 taken 1 (fallthrough)
       11:   83:        items[i]->print();
       11:   83-block  0
call    0 returned 11
        -:   84:    }
        1:   85:}
        -:   86:
function _ZN4shop10removeItemENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 2 returned 100% blocks executed 81%
        2:   87:void shop::removeItem(std::string s) {
        2:   88:    int index = itemIndex(s);
        2:   88-block  0
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
        2:   88-block  1
call    4 returned 2
branch  5 taken 2 (fallthrough)
branch  6 taken 0 (throw)
    $$$$$:   88-block  2
call    7 never executed
    $$$$$:   88-block  3
call    8 never executed
        2:   89:    if (index == -1) {
        2:   89-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 1
        1:   90:        std::cout << "Item not found" << std::endl;
        1:   90-block  0
call    0 returned 1
call    1 returned 1
        -:   91:    } else {
       1*:   92:        item** temp = new item*[numItems - 1];
        1:   92-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        1:   92-block  1
    %%%%%:   92-block  2
        1:   92-block  3
call    2 returned 1
        1:   93:        int count = 0;
       12:   94:        for (int i = 0; i < numItems; i++) {
       11:   94-block  0
       12:   94-block  1
branch  0 taken 11
branch  1 taken 1 (fallthrough)
       11:   95:            if (i != index) {
       11:   95-block  0
branch  0 taken 10 (fallthrough)
branch  1 taken 1
       10:   96:                temp[count] = items[i];
       10:   97:                count++;
       10:   97-block  0
        -:   98:            }
        -:   99:        }
        -:  100:
        1:  101:        delete items[index];
        1:  101-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        1:  101-block  1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        1:  101-block  2
call    5 returned 1
    $$$$$:  101-block  3
call    6 never executed
        1:  102:        delete[] items;
        1:  102-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        1:  102-block  1
call    2 returned 1
        -:  103:
        1:  104:        items = temp;
        1:  105:        numItems--;
        1:  105-block  0
        -:  106:    }
        2:  107:}
        2:  107-block  0
